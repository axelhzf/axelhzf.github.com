<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | axelhzf]]></title>
  <link href="http://axelhzf.github.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://axelhzf.github.com/"/>
  <updated>2012-08-17T23:24:53+01:00</updated>
  <id>http://axelhzf.github.com/</id>
  <author>
    <name><![CDATA[Axel Hernández Ferrera]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Grunt Live-Reload]]></title>
    <link href="http://axelhzf.github.com/blog/2012/06/15/grunt-live-reload/"/>
    <updated>2012-06-15T23:34:00+01:00</updated>
    <id>http://axelhzf.github.com/blog/2012/06/15/grunt-live-reload</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/posts/grunt-reload.jpg"></p>

<h2>LiveReload</h2>

<p><a href="http://livereload.com/">LiveReload</a> es una aplicación genial. Su funcionalidad es muy sencilla, se encarga de refrescar el navegador automáticamente mientras estas desarrollando. Imagina que estas trabajando en el diseño de una web y estas haciendo pequeñas modificaciones en los estilos para ver cómo va quedando el diseño. Para visualizar cada pequeño cambio es necesario cambiar a la ventana del navegador y refrescar las página. Livereload elimina ese cambio de contexto, monitoriza los ficheros fuentes y cuando detecta que se ha modifica un fichero fuerza a que el navegador se actualice automáticamente.</p>

<!-- more -->


<p>LiveReload trae incorporado varios preprocesadores como por ejemplo CoffeeScript, LESS o SASS. Esto ya se vuelve mucho más interesante, puedes estar modificando un fichero less y el cambio se refleja automáticamente en el navegador. Sin tener que compilar manualmente ese fichero. Esto es una clara ventaja a utilizar las herramientas de desarrollo del navegador para probar los cambios de diseño y luego llevar esos cambios al fichero.</p>

<p>LiveReload está disponible para OS X en la App Store por $9.99 y para windows está en versión beta.</p>

<p>Si prefieres no utilizar una aplicación con GUI, en la página recomiendan utilizar <a href="https://github.com/guard/guard-livereload">guard-livereload</a>. Una librería escrita en ruby que permite hacer de servidor livereload. En este post explican cómo configurarlo: <a href="http://icoloma.blogspot.com.es/2012/06/using-livereload-on-linux.html">http://icoloma.blogspot.com.es/2012/06/using-livereload-on-linux.html</a></p>

<h3>Desventajas de utilizar LiveReload</h3>

<p>El principal problema que le encuentro a LiveReload es que no se integra con el ciclo de compilación de la aplicación. Es una aplicación externa que duplica la configuración de los preprocesadores. Por un lado está la configuración en grunt, para empaquetar la aplicación y por otro lado livereload para hacer el desarrollo más cómodo. Mantener la misma configuración en dos sitios distintos puede llevar a errores de sincronización.</p>

<h2>grunt-reload</h2>

<p>Buscando entre los plugins que tiene grunt encontré uno que hace una funcionalidad similar,  se llama <a href="https://github.com/webxl/grunt-reload">grunt-reload</a>. Para que funcione no hace falta instalar ninguna extensión en el navegador y lo mejor de todo es que es completamente gratis.</p>

<h3>Configuración de un proyecto usando grunt-reload</h3>

<p>Lo primero, ya que vamos a trabajar con grunt, debemos tener instalado <a href="http://nodejs.org/#download">node.js y NPM</a>.</p>

<p>Para el proyecto de ejemplo vamos a ver como integrar <a href="https://github.com/jharding/grunt-less">grunt-less</a> y <a href="https://github.com/webxl/grunt-reload">grunt-reload</a>. Lo primero que vamos a hacer es crear un fichero <code>package.json</code> donde vamos a configurar las dependencias del proyecto. Para la gente que viene del mundo de Java, este fichero es el equivalente al <code>pom.xml</code> de maven.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>package.json  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="s2">&quot;post-grunt-reload&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;description&quot;</span> <span class="o">:</span> <span class="s2">&quot;Source code from post&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;author&quot;</span> <span class="o">:</span> <span class="s2">&quot;Axel Hernández Ferrera &amp;lt;axelhzf@gmail.com&amp;gt;&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;version&quot;</span> <span class="o">:</span> <span class="s2">&quot;0.0.1&quot;</span><span class="p">,</span>
</span><span class='line'><span class="s2">&quot;dependencies&quot;</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;grunt&quot;</span> <span class="o">:</span> <span class="s2">&quot;&amp;gt;= 0.3.9&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;grunt-less&quot;</span> <span class="o">:</span> <span class="s2">&quot;&amp;gt;= 0.1.5&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;grunt-reload&quot;</span> <span class="o">:</span> <span class="s2">&quot;&amp;gt;= 0.1.2&quot;</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="s2">&quot;engine&quot;</span> <span class="o">:</span> <span class="s2">&quot;node 0.6.0&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Ya tenemos las dependencias definidas, para instalarlas:</p>

<pre><code>npm install
</code></pre>

<p>Ahora vamos a preparar un ejemplo sencillo que utilice less:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>index.html  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="ni">&amp;lt;</span>!DOCTYPE html&gt;
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>meta charset=&quot;utf-8&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>div class=&quot;msg&quot;<span class="ni">&amp;gt;</span>This page reload automatically when a file is modified :D<span class="ni">&amp;lt;</span>/div<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>style.less  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@bgColor</span><span class="o">:</span> <span class="nf">#ff5412</span><span class="p">;</span>
</span><span class='line'><span class="k">@textColor</span><span class="o">:</span> <span class="nf">#fff</span><span class="p">;</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="nc">.msg</span> <span class="p">{</span><span class="o">&lt;/</span><span class="err">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">background-color</span><span class="o">:</span> <span class="o">@</span><span class="n">bgColor</span><span class="p">;</span>
</span><span class='line'><span class="k">color</span><span class="o">:</span> <span class="o">@</span><span class="n">textColor</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Por último nos queda configurar grunt para integrar las dos tasks.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>grunt.js  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="c1">// Project configuration.</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">less</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">all</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;style.less&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;style.css&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">watch</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">files</span> <span class="o">:</span> <span class="s1">&#39;&amp;lt;config:less.all.src&amp;gt;&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">tasks</span> <span class="o">:</span> <span class="s1">&#39;less reload&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">reload</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">proxy</span><span class="o">:</span> <span class="p">{}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">server</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">port</span> <span class="o">:</span> <span class="mi">8000</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// External tasks</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-less&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-reload&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Custom tasks names</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="s1">&#39;less&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;dev&#39;</span><span class="p">,</span> <span class="s1">&#39;server reload watch&#39;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Ejecutando el comando</p>

<pre><code>grunt dev
</code></pre>

<p>Se arrancará un servidor en el puerto 8000 y un proxy en el 8001. Accediendo a <a href="http://localhost:8001/">http://localhost:8001/</a> con un navegador que tenga soporte para websockets, los cambios que hagamos en el fichero .less producieran que se actualice la página automáticamente. El último paso y más importante es buscar un monitor lo suficientemente grande donde quepa el editor de texto y el navegador a la vez.</p>

<h2>¿Cómo funciona?</h2>

<p><img src="https://docs.google.com/drawings/pub?id=1cDIetWqZmVvZzag7ec1QhhbNGkbUa-wCCFNWz2cFvL4&amp;w=960&amp;h=720"></p>

<p>El funcionamiento es muy sencillo. Al ejecutar el comando <code>grunt dev</code> se lanza un servidor, en el puerto 8000, un proxy en el puerto 80001 y un servidor que se encargará de gestionar las conexiones de webscokets.</p>

<p>La función del reload proxy es inyectar un javascript en la página. Este javascript se va a encargar de las funciones de livereload. Cuando se cargue la página abrirá una conexión con el servidor websocket.</p>

<p>Cuando la tarea grunt watch detecte cambios en alguno de los ficheros que está monitorizando, ejecutará los preprocesadores que tengamos configurados y llamará a la tarea reload. Esta tarea se comunicará con el servidor de webscoket para informarle de que hay que reiniciar la página. El servidor de webscoket se comunicará con todos los navegadores que tengan una conexión abierta enviándoles un mensaje de reload. El javascript inyectado es el que va a forzar la actualización de la página cuando reciba este mensaje.</p>

<p>Aquí tienes una lista de navegadores que soportan websockets</p>

<p><a href="http://caniuse.com/#feat=websockets">http://caniuse.com/#feat=websockets</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Labs : Canvas Star Wars]]></title>
    <link href="http://axelhzf.github.com/blog/2012/05/30/labs-canvas-star-wars/"/>
    <updated>2012-05-30T09:15:00+01:00</updated>
    <id>http://axelhzf.github.com/blog/2012/05/30/labs-canvas-star-wars</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/posts/star_wars.png"></p>

<p>Para el <a href="http://axelhzf.com/ios-curso/cocos2d.html">curso de iOS</a> preparé un pequeño juego de Star Wars para aprender a utilizar Cocos2D. Estos últimos días he estado aprendiendo <a href="https://developer.mozilla.org/en/Canvas_tutorial">canvas</a> y me decidí a hacer una versión del juego de Star Wars en canvas. El código fuente está disponible en github : <a href="https://github.com/axelhzf/starwars-canvas">https://github.com/axelhzf/starwars-canvas</a>.</p>

<p><a class="btn" href="http://axelhzf.com/starwars-canvas/">Play Game</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grunt]]></title>
    <link href="http://axelhzf.github.com/blog/2012/05/27/grunt/"/>
    <updated>2012-05-27T16:07:00+01:00</updated>
    <id>http://axelhzf.github.com/blog/2012/05/27/grunt</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/posts/grunt.png"></p>

<p><a href="https://github.com/cowboy/grunt">Grunt</a> es una herramienta para construir proyectos javascript. Se encarga de las tareas básicas de la de compilación como puede ser concatenar y minimizar los ficheros, ejecutar los test, validar la sintaxis, etc. Es personalizable y se pueden definir nuevas tareas para cubrir las necesidades de nuestro proyecto.</p>

<p>Lo primero que me llamo la atención es su rapidez. He probado algunas otras herramientas que tienen el mismo objetivo, como por ejemplo <a href="http://code.google.com/p/wro4j/">wro4j</a>, pero grunt es mucho más rápido.</p>

<!-- more -->


<p>Las tareas que trae grunt por defecto son:</p>

<ul>
<li><code>concat</code> - Concatena ficheros</li>
<li><code>init</code> - Crea un proyecto a partir de una plantilla</li>
<li><code>lint</code> - Valida los ficheros con JSHint</li>
<li><code>min</code> - Minimiza con UglifyJS</li>
<li><code>qunit</code> - Ejecuta test de QUnit</li>
<li><code>server</code> - Ejecuta un servidor estático</li>
<li><code>test</code> - Ejecuta test de nodeunit</li>
<li><code>watch</code> - Ejecuta tareas automáticamente cuando los ficheros se han modificado</li>
</ul>


<h2>Instalación</h2>

<p>Para instalar grunt.js lo más sencillo es utilizar <a href="http://npmjs.org/">npm</a> el gestor de paquetes de node. El comando es</p>

<pre><code>npm install grunt   
</code></pre>

<p>Opcionalmente se le puede pasar la opcion <code>-g</code> para que instale el paquete de forma global. Esto es particularmente interesante para poder ejecutar la tarea <code>init</code> en cualquier carpeta.</p>

<pre><code>npm install -g grunt
</code></pre>

<h2>Configuración</h2>

<p>Grunt se configura mediante el fichero <code>grunt.js</code> en la raíz del proyecto. En este fichero podremos configurar las diferentes tareas que van a intervenir en la compilación del proyecto.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>grunt.js  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">lint</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">all</span> <span class="o">:</span> <span class="p">[</span><span class="s1">&#39;src/**/*.js&#39;</span><span class="p">,</span> <span class="s1">&#39;test/**/*.js&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">jshint</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">options</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">browser</span> <span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">concat</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">dist</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">src</span> <span class="o">:</span> <span class="p">[</span><span class="s1">&#39;src/**/*.js&#39;</span><span class="p">],</span>
</span><span class='line'>            <span class="nx">dest</span> <span class="o">:</span> <span class="s1">&#39;dist/built.js&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">separator</span> <span class="o">:</span> <span class="s1">&#39;;&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">min</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">dist</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">src</span> <span class="o">:</span> <span class="p">[</span><span class="s1">&#39;dist/built.js&#39;</span><span class="p">],</span>
</span><span class='line'>            <span class="nx">dest</span> <span class="o">:</span> <span class="s1">&#39;dist/built.min.js&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="s1">&#39;lint concat min&#39;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Esta es una configuración básica de grunt en la que estamos validando los ficheros, concatenándolos y minimizánlos. La configuración se hace mediante javascript, nos evitamos problemas definiendo ficheros xml como se hace con otras herramientas.</p>

<p>Al ejecutar el comando</p>

<pre><code>grunt
</code></pre>

<p>Se ejecuta la tarea <code>default</code> que tal como definimos, se encarga de ejecutar las otras tareas. Si queremos ejecutar una tarea en concreto</p>

<pre><code>grunt lint
</code></pre>

<p>Puedes ver cómo se configuran el resto de tareas en la <a href="https://github.com/cowboy/grunt/tree/master/docs">documentación</a>.</p>

<p>Para utilizar una tarea que no viene por defecto, lo primero que debemos hacer es instarla. En este caso vamos a hacer las pruebas con <a href="https://github.com/sindresorhus/grunt-recess">grunt-recess</a> una tarea que permite validar y minimizar archivos CSS y LESS. Para la instalación también se utiliza npm.</p>

<pre><code>npm install grunt-recess
</code></pre>

<p>Una vez instalado lo único que debemos hacer es añadir la configuración al fichero grunt.js</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>grunt.js  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>    <span class="c1">//....</span>
</span><span class='line'>    <span class="nx">recess</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">dist</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">src</span> <span class="o">:</span> <span class="s1">&#39;less/*.less&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">dest</span> <span class="o">:</span> <span class="s1">&#39;dist/all.css&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">options</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">compile</span> <span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">compress</span> <span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-recess&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="s1">&#39;lint concat min recess&#39;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Lo primero que debemos hacer es incluir la tarea utilizando el comando <code>grunt.loadNpmTasks</code> y configurarla de la misma forma que las tareas básicas.</p>

<p>Esta tarea se presta a combinarla con la tarea watch. De forma que cada vez que cada vez que se modifique un fichero less se compile automáticamente.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>grunt.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>    <span class="c1">//....</span>
</span><span class='line'>    <span class="nx">recess</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">dist</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">src</span> <span class="o">:</span> <span class="s1">&#39;less/*.less&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">dest</span> <span class="o">:</span> <span class="s1">&#39;dist/all.css&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">options</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">compile</span> <span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>                <span class="nx">compress</span> <span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">watch</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">files</span> <span class="o">:</span> <span class="s1">&#39;less/*.less&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">tasks</span> <span class="o">:</span> <span class="s1">&#39;recess&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-recess&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="s1">&#39;lint concat min recess&#39;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Después ejecutamos</p>

<pre><code>grunt watch
</code></pre>

<p>Y cada vez que modifiquemos un fichero less, se volverá a regerar el fichero css compilado y minimizado.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[knockout.js (Ejemplo completo)]]></title>
    <link href="http://axelhzf.github.com/blog/2011/09/26/knockout-dot-js-ejemplo-completo/"/>
    <updated>2011-09-26T22:05:00+01:00</updated>
    <id>http://axelhzf.github.com/blog/2011/09/26/knockout-dot-js-ejemplo-completo</id>
    <content type="html"><![CDATA[<p>En el anterior post hice un pequeña <a href="http://axelhzf.tumblr.com/post/10638045853/knockout">introducción a la librería knockout.js</a>.  Este post, continuación del anterior, tiene un ejemplo más completo en el cual espero que se vea mejor la utilidad de la librería. En el ejemplo crearemos una tabla de Posts, donde mostraremos el título y el texto. Le añadiremos a la tabla filtrado y edición inline. Con esto veremos cómo utilizar variables observables, dependentObservables y observableArrays.
También haremos uso de jquery tmpl para renderizar la vista.</p>

<p>Este post también forma parte del curso de desarrollo de aplicaciones web con Play.</p>

<p>Prueba el ejemplo completo en <a href="http://jsfiddle.net/9mSBY/">http://jsfiddle.net/9mSBY/</a></p>

<!-- more -->


<h3>Esqueleto de la página</h3>

<p>Enlazamos los css y js que vamos a utilizar:</p>

<ul>
<li>Twitter Bootstrap (Para el aspecto de la página)</li>
<li>jQuery</li>
<li>jQuery tmpl</li>
<li>knockout.js</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span><span class="ni">&amp;lt;</span>!doctype html&gt;
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>title<span class="ni">&amp;gt;&amp;lt;</span>/title<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>link rel=&quot;stylesheet&quot; href=&quot;http://twitter.github.com/bootstrap/1.3.0/bootstrap.min.css&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>script type=&quot;text/javascript &quot; src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js&quot;<span class="ni">&amp;gt;&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>script type=&quot;text/javascript&quot; src=&quot;http://cloud.github.com/downloads/SteveSanderson/knockout/jquery.tmpl.min.js&quot;<span class="ni">&amp;gt;&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>script type=&quot;text/javascript&quot; src=&quot;http://cloud.github.com/downloads/SteveSanderson/knockout/knockout-1.2.1.js&quot;<span class="ni">&amp;gt;&amp;lt;</span>/script<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Tabla</h3>

<p>Añadimos la tabla donde mostraremos el listado de Post en 3 columnas. La primera de selección, la segunda el título y luego el texto.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;table&gt;</span>
</span><span class='line'>        <span class="nt">&lt;thead&gt;</span>
</span><span class='line'>        <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>            <span class="nt">&lt;th&gt;&lt;/th&gt;</span>
</span><span class='line'>            <span class="nt">&lt;th&gt;</span>Title<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>            <span class="nt">&lt;th&gt;</span>Text<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/thead&gt;</span>
</span><span class='line'>        <span class="nt">&lt;tbody</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/table&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>ViewModel</h3>

<p>El viewModel contará con un listado de post que se mostrarán en la tabla</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script&gt;</span>
</span><span class='line'>     <span class="kd">function</span> <span class="nx">containsIgnoreCase</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span> <span class="nx">q</span><span class="p">){</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>     <span class="kd">function</span> <span class="nx">Post</span><span class="p">(</span><span class="nx">title</span><span class="p">,</span> <span class="nx">text</span><span class="p">){</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">title</span> <span class="o">=</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="nx">title</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">text</span> <span class="o">=</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="nx">text</span><span class="p">);</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">selected</span> <span class="o">=</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">containsText</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">query</span><span class="p">){</span>
</span><span class='line'>            <span class="k">return</span> <span class="nx">containsIgnoreCase</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="p">(),</span> <span class="nx">query</span><span class="p">)</span>
</span><span class='line'>                <span class="o">||</span> <span class="nx">containsIgnoreCase</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">(),</span> <span class="nx">query</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>     <span class="kd">var</span> <span class="nx">viewModel</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">posts</span> <span class="o">:</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observableArray</span><span class="p">([])</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>     <span class="nx">viewModel</span><span class="p">.</span><span class="nx">posts</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">Post</span><span class="p">(</span><span class="s1">&#39;title1&#39;</span><span class="p">,</span> <span class="s1">&#39;text1&#39;</span><span class="p">));</span>
</span><span class='line'>     <span class="nx">viewModel</span><span class="p">.</span><span class="nx">posts</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">Post</span><span class="p">(</span><span class="s1">&#39;title2&#39;</span><span class="p">,</span> <span class="s1">&#39;text2&#39;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>     <span class="nx">ko</span><span class="p">.</span><span class="nx">applyBindings</span><span class="p">(</span><span class="nx">viewModel</span><span class="p">);</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>En la clase Post se han definido los 3 campos como variables observables, para que los cambios que se hagan en esas variables se actualicen automáticamente. En el viewModel hemos definido un observableArray con el listado de post. Añadimos a esta lista dos posts de ejemplo.</p>

<p>Para mostrar los posts en la tabla. Creamos una nueva plantilla que mostrará el contenido de cada fila.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/html&quot;</span> <span class="na">id=</span><span class="s">&quot;postRow&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">tr</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;checkbox&quot;</span> <span class="nx">data</span><span class="o">-</span><span class="nx">bind</span><span class="o">=</span><span class="s2">&quot;checked: selected&quot;</span> <span class="o">/&gt;&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">{</span><span class="nx">title</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">{</span><span class="nx">text</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/tr&gt;</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Y añadimos en binding en la tabla para que renderice la plantilla "postRow" con el listado de "posts".</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;tbody</span> <span class="na">data-bind=</span><span class="s">&quot;template : {name : &#39;postRow&#39;, foreach: posts}&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Con este código ya tenemos sincronizada la tabla con la lista de Posts. Para hacer una prueba podemos abrir la consola javascript y añadir un nuevos post.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">viewModel</span><span class="p">.</span><span class="nx">posts</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">Post</span><span class="p">(</span><span class="s1">&#39;prueba&#39;</span><span class="p">,</span> <span class="s1">&#39;desde la consola de javascript!&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>La tabla se tiene que haber actualizado automáticamanete con la nueva fila añadida.</p>

<h3>Filtrado</h3>

<p>Para añadir filtrado de la tabla vamos a almacenar dos arrays, uno con la lista de posts completos y otro con la lista de posts filtrados.</p>

<p>Añadimos un campo de texto donde vamos a escribir el filtro. El evento por defecto que actualiza el viewModel es cuando pierde foco. Para hacer un filtrado en tiempo real podemos cambiar el evento de actualización a 'afterkeydown'.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    ...
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;form&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;clearfix&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">&quot;xxlarge&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">data-bind=</span><span class="s">&quot;value : filterQuery, valueUpdate:&#39;afterkeydown&#39;&quot;</span> <span class="na">placeholder=</span><span class="s">&quot;Filter&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/form&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Modificamos el viewModel para añadir el texto por el que se filtra y la lista de posts filtrados. Definimos la variable filteredPost como dependentObservable, de esta forma, cada vez que se actualice la lista de post, se volverá a evaluar la lista de post filtrados. En el caso de que el filtro esté vacio, mostramos la lista de todos los posts.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>var viewModel = {<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>posts : ko.observableArray([]),
</span><span class='line'>filterQuery : ko.observable(&#39;&#39;)
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>}<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>viewModel.filteredPosts = ko.dependentObservable(function(){<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>var query = this.filterQuery();
</span><span class='line'>if(query){
</span><span class='line'>    var filtered = [];
</span><span class='line'>    $.each(viewModel.posts(), function(i, post){
</span><span class='line'>        if(post.containsText(query)){
</span><span class='line'>            filtered.push(post);
</span><span class='line'>        }
</span><span class='line'>    });
</span><span class='line'>    return filtered;
</span><span class='line'>}
</span><span class='line'>//Not filtering
</span><span class='line'>return viewModel.posts();
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>}, viewModel);<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Modificamos el binding de la tabla para mostrar la lista de posts filtrados.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;tbody</span> <span class="na">data-bind=</span><span class="s">&quot;template : {name : &#39;postRow&#39;, foreach: filteredPosts}&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Edición inline</h3>

<p>Para permitir la edición inline vamos a añadir una nueva variable que nos indique si estamos en modo edición. En el modo de edición, en la tabla aparecerán campos de texto donde el usuario podrá modificar las filas. También añadiremos un botón de nuevo y un botón para borrar las filas seleccionados.</p>

<p>Botones para realizar las acciones.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    ...
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;form&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;clearfix&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">class=</span><span class="s">&quot;btn primary&quot;</span> <span class="na">data-bind=</span><span class="s">&quot;click : newPost&quot;</span><span class="nt">&gt;</span>New post<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">class=</span><span class="s">&quot;btn primary&quot;</span> <span class="na">data-bind=</span><span class="s">&quot;visible: editMode, click: toggleEditMode&quot;</span><span class="nt">&gt;</span>Save<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">class=</span><span class="s">&quot;btn&quot;</span> <span class="na">data-bind=</span><span class="s">&quot;visible: !editMode(), click : toggleEditMode&quot;</span><span class="nt">&gt;</span>Edit<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span> <span class="na">class=</span><span class="s">&quot;btn danger&quot;</span> <span class="na">data-bind=</span><span class="s">&quot;click : deletePosts&quot;</span><span class="nt">&gt;</span>Delete<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>     ...
</span></code></pre></td></tr></table></div></figure></notextile></div>


La plantilla muestra el texto o un input dependiendo del campo editMode.

<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/html&quot;</span> <span class="na">id=</span><span class="s">&quot;postRow&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">tr</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;checkbox&quot;</span> <span class="nx">data</span><span class="o">-</span><span class="nx">bind</span><span class="o">=</span><span class="s2">&quot;checked: selected&quot;</span> <span class="o">/&gt;&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">data</span><span class="o">-</span><span class="nx">bind</span><span class="o">=</span><span class="s2">&quot;value : title&quot;</span> <span class="o">/&gt;&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">data</span><span class="o">-</span><span class="nx">bind</span><span class="o">=</span><span class="s2">&quot;value : text&quot;</span> <span class="o">/&gt;&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">{</span><span class="nx">title</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;</span><span class="nx">$</span><span class="p">{</span><span class="nx">text</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/tr&gt;</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>


Añadimos las acciones al modelo.

<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">viewModel</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">posts</span> <span class="o">:</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observableArray</span><span class="p">([]),</span>
</span><span class='line'>    <span class="nx">filterQuery</span> <span class="o">:</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">editMode</span> <span class="o">:</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">viewModel</span><span class="p">.</span><span class="nx">selectedPosts</span> <span class="o">=</span> <span class="nx">ko</span><span class="p">.</span><span class="nx">dependentObservable</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">posts</span><span class="p">(),</span> <span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">post</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">post</span><span class="p">.</span><span class="nx">selected</span><span class="p">()){</span>
</span><span class='line'>            <span class="nx">result</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">post</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
</span><span class='line'><span class="p">},</span> <span class="nx">viewModel</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">viewModel</span><span class="p">.</span><span class="nx">toggleEditMode</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">viewModel</span><span class="p">.</span><span class="nx">editMode</span><span class="p">(</span><span class="o">!</span><span class="nx">viewModel</span><span class="p">.</span><span class="nx">editMode</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">viewModel</span><span class="p">.</span><span class="nx">newPost</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">viewModel</span><span class="p">.</span><span class="nx">posts</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">Post</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">));</span>
</span><span class='line'>    <span class="nx">viewModel</span><span class="p">.</span><span class="nx">editMode</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">viewModel</span><span class="p">.</span><span class="nx">deletePosts</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">viewModel</span><span class="p">.</span><span class="nx">posts</span><span class="p">.</span><span class="nx">removeAll</span><span class="p">(</span><span class="nx">viewModel</span><span class="p">.</span><span class="nx">selectedPosts</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

Declarando la variable selectedPosts como dependentObservable nos aseguramos que esté sincronizada con la lista de posts. A la hora de borrar los posts de la lista utilizamos la función removeAll y le pasamos la lista completa de posts seleccionados.

### Conclusiones

En el ejemplo hemos visto como podemos utilizar knockout.js para tener sincronizada la interfaz de usuario con el modelo. Haciendo uso de variables dependientes y bindings hemos conseguido darle comportamiento dinámico a una tabla estática. En pocas lineas de código hemos conseguido que nuestra tabla sea completamente editable y filtrable.

Falta ver como sincronizar nuestro modelo con el servidor por medio de llamadas ajax. Lo dejo pendiente para un futuro artículo.


Puedes ver el código completo en [http://jsfiddle.net/9mSBY/](http://jsfiddle.net/9mSBY/)

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[knockout.js]]></title>
    <link href="http://axelhzf.github.com/blog/2011/09/25/knockout-dot-js/"/>
    <updated>2011-09-25T22:01:00+01:00</updated>
    <id>http://axelhzf.github.com/blog/2011/09/25/knockout-dot-js</id>
    <content type="html"><![CDATA[<p><a href="http://knockoutjs.com/">knockout.js</a> es una librería javascript que implementa el patrón Model View View-Model.</p>

<h3>Patrón Model View View-Model</h3>

<p>Patrón Model View View-Model (MVVM) es un patrón diseñado para construir interfaces de usuario.
Describe cómo mantener de una forma simple una interfaz de usuario sofisticada dividiéndola en tres partes:</p>

<ul>
<li>Model: Los datos de la aplicación.</li>
<li>View-Model : Representación de los datos y las operaciones de la interfaz gráfica. No es la interfaz de usuario en sí, no tiene los conceptos de botones o estilos.</li>
<li>Vista : Representación gráfica del estado del View-Model. Muestra la información del View-Model y envía comandos para ejecutar las acciones.</li>
</ul>


<h3>Aplicado a Knockout.js</h3>

<ul>
<li>Modelo : Normalmente llamadas Ajax para leer o escribir en el servidor.</li>
<li>View-Model : Código javascript puro.</li>
<li>Vista : Código HTML con "bindings" declarativos para enlazar el view-model. También se pueden utilizar templates para generar el código html.</li>
</ul>


<h3>Ejemplo</h3>

<p><a href="http://jsfiddle.net/h7tgN/">http://jsfiddle.net/h7tgN/</a></p>

<p>En el ejemplo tenemos un campo de texto donde estamos escribiendo en la variable valor. La variable se esta actualizando automáticamente cuando se presiona una tecla. Después tenemos una etiqueta span donde estamos mostrando el contenido de la variable. Vemos que a medida que vamos escribiendo en el campo de texto se va actualizando la etiqueta.</p>

<p>Recomiendo que pruebes los tutoriales de knockout.js <a href="http://learn.knockoutjs.com/">http://learn.knockoutjs.com/</a>. Están bastante trabajados y tienen una web donde puedes ir probando el código en la página web directamente y viendo los resultados.</p>

<p>Nota : El contenido de este post pertenece a un curso de desarrollo de aplicaciones web con Play Framework que daré del 3 al 7 de octubre.</p>
]]></content>
  </entry>
  
</feed>
